<?php

function en3_lms_block_info() {
  $blocks = array();
  $blocks['user_courses_passed'] = array(
    'info' => t('Courses Passed'),
  );

  $blocks['user_courses_failed'] = array(
    'info' => t('Courses Failed'),
  );

  $blocks['user_courses_yet_to_attempt'] = array(
    'info' => t('Courses Yet to Attempt'),
  );
  
  $blocks['licensce_image'] = array(
    'info' => t('License Image'),
  );

  return $blocks;
}
/**
* Implements hook_block_view().
*/
function en3_lms_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'user_courses_passed':
      $block['subject'] = '';
      if(user_is_logged_in()){
        $block['content'] = en3_lms_passed_result();
      }
      break;

    case 'user_courses_failed':
      $block['subject'] = '';
      if(user_is_logged_in()){
        $block['content'] = en3_lms_failed_result();
      }
      break;

    case 'user_courses_yet_to_attempt':
      $block['subject'] = '';
      if(user_is_logged_in()){
        $block['content'] = en3_lms_courses_yet_to_attempt();
      }
      break;
    
    case 'licensce_image':
      $block['subject'] = '';
      $block['content'] = en3_lms_license_img_block();
      break;


  }
  return $block;
}


function en3_lms_failed_result(){
  global $user;
  $header_s = array(
                 array('data' => 'Course Name','field' => 'nid','sort' => 'DESC',),
                 'Failed',
                 array('data' => 'Date','field' => 'time_end','sort' => 'DESC',),
                 array('data' => 'Score','field' => 'score','sort' => 'DESC',),
                 'Revise Course',
                 'Attempt Again');
  global $base_url;
    $query = db_select('quiz_node_results', 'qnr')
              ->extend('PagerDefault')
              ->extend('TableSort');

  # get the desired fields from the database
  $query->condition('uid', $user->uid)
        ->condition('score',75,'<')
        ->fields('qnr', array('result_id','nid', 'score', 'time_end'))
        ->orderBy('qnr.result_id','DESC')
        ->orderByHeader($header_s)
        ->limit(5);

  # execute the query
  $results = $query->execute();

  foreach($results as $quiz){
    $course_title = db_select('course_outline', 'co');
    $course_title->join('node', 'n', 'co.nid= n.nid');
    $course_title->fields('n', array('title','nid'))
      ->condition('co.instance', $quiz->nid);
    $course_title = $course_title->execute()->fetchAll();

    //Check if nid is already constructed.
    if(!in_array($course_title[0]->nid,$node_id_already)){
    $documents_id = db_query("select instance from course_outline where nid = :nid and object_type = :type",array(':nid' => $course_title[0]->nid,':type' => 'course_documents'))->fetchAll();
      foreach($documents_id as $key => $document){
    $doc_node_title = db_query("select title from node where nid = :nid",array(':nid' => $document->instance))->fetchField();
    $documents .= "<a href =".url('node/'.$document->instance).">".$doc_node_title."</a> / ";  
      }
    $options[] =  array(
                    $course_title[0]->title,
                    'yes',
                     date('j F Y',$quiz->time_end),
                    $quiz->score."/100",
                    substr($documents,0,-2) , // To eliminate the Last slash symbol in the link.
                    "<a href =".url("node/".$quiz->nid."/take").">Re-Take</a>");
      
    }
      //Assign the node id to avoid duplicates.
      $node_id_already[] = $course_title[0]->nid;

    
  }
  $output =  theme('table', array(
    'header' => $header_s,
    'rows' => $options,
    ));
  
  $output .= theme('pager');
  return $output;
}

function en3_lms_passed_result(){
  global $user;
  global $base_url;
    $query = db_select('quiz_node_results', 'qnr')
             ->extend('PagerDefault')
             ->extend('TableSort');

  $header_w = array(
                 array('data' => 'Course Name','field' => 'nid','sort' => 'ASC',),
                 'Passed',
                 array('data' => 'Date'
,'field' => 'time_end','sort' => 'ASC',),
                 array('data' => 'Score','field' => 'score','sort' => 'ASC'),
            );

  # get the desired fields from the database
  $query->condition('uid', $user->uid)
        ->condition('score',75,'>')
        ->fields('qnr', array('result_id','nid', 'score', 'time_end'))
        ->orderBy('qnr.result_id','DESC')
        ->orderbyHeader($header_w)
        ->limit(5);

  # execute the query
  $results = $query->execute();

  foreach($results as $quiz){

    if(!in_array($quiz->nid,$node_id_already)){

    $course_title = db_select('course_outline', 'co');
    $course_title->join('node', 'n', 'co.nid= n.nid');
    $course_title->fields('n', array('title','nid'))
      ->condition('co.instance', $quiz->nid);
    $course_title = $course_title->execute()->fetchAll();

    //$documents_id = db_query("select instance from course_outline where nid = :nid and object_type = :type",array(':nid' => $course_title[0]->nid,':type' => 'course_documents'))->fetchAll();
  
  
    $options[] =  array(
                    $course_title[0]->title,
                    'yes',
                     date('j F Y',$quiz->time_end),
                    $quiz->score."/100",
                   );
    
   }
   $node_id_already[] = $quiz->nid;
 }

$build['tablesort_table'] = array(
    '#theme' => 'table',
    '#header' => $header_w,
    '#rows' => $options,
  );

  return $build;
  

}

function en3_lms_courses_yet_to_attempt(){
  global $user;
  global $base_url;

  $header = array(
                 array('data' => 'Course Name','field' => 'nid','sort' => 'ASC',),
                 'Yet to Attempt');

  $course_nodes = db_query("select nid from node where type = 'course'")->fetchAll();

  $course_title = db_select('course_outline', 'co');
    $course_title->join('quiz_node_results', 'qnr', 'co.instance= qnr.nid');
    $course_title->fields('co', array('nid'))
      ->condition('qnr.uid', $user->uid)
       ->extend('PagerDefault')
       ->extend('TableSort')
       ->orderbyHeader($header);
    $course_title = $course_title->execute()->fetchAll();
    foreach($course_title as $nid){

      $nids[] = $nid->nid;
    }

    foreach($course_nodes as $course_nid){

      if(!in_array($course_nid->nid,$nids)){
         $yet_course  = db_query("select title from node where nid = :nid",array(':nid' => $course_nid->nid))->fetchField();
         $options[] = array("<a href = ".url("node/".$course_nid->nid).">".$yet_course."</a>",'Yes');
      }
    }
  $output =  theme('table', array(
    'header' => $header,
    'rows' => $options,
    ));
return $output;
}


function en3_lms_license_img_block(){
  global $user;
  $users = user_load($user->uid);
  if(!empty($users->og_user_node[LANGUAGE_NONE]) && ($user->uid != 34)){
  $membership_node_id = $users->og_user_node[LANGUAGE_NONE][0]['target_id'];
  $node = node_load($membership_node_id);
  if(user_is_logged_in() && !empty($node->field_oa_banner[LANGUAGE_NONE][0]['fid'])){

    $fid = $node->field_oa_banner[LANGUAGE_NONE][0]['fid'];
    variable_set('oa_site_banner', $fid);

 
  }

}
  else
  {

    $fid = 77;
    variable_set('oa_site_banner', $fid);
  }
 
}


function en3_lms_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if($form_id == 'comment_node_customer_form'){
   if(!in_array('administrator',$user->roles)){
      if(!in_array('Site admin',$user->roles)){
      $node = node_load($form_state['build_info']['args'][0]->nid);
      $comment_ids = db_query("select cid from comment where nid = :nid order by cid DESC",array(':nid' => $form_state['build_info']['args'][0]->nid))->fetchAll();

      foreach($comment_ids as $cid){
        $comment = comment_load($cid->cid);

        if(!empty($comment->field_signed_date)){
           $date_is_there = TRUE;
        }
      }
      if($date_is_there){
       $form['field_signed_date']['#disabled'] = TRUE;

     }
    }
    // Select the lastest cid of a node.
      $comment_id = db_query("select cid from comment where nid = :nid order by cid DESC",array(':nid' => $form_state['build_info']['args'][0]->nid))->fetchField();
      if($comment_id){
        $comments = comment_load($comment_id);
          if(!empty($comments->field_signed_date)){
            $date1 = date_create($comments->field_signed_date[LANGUAGE_NONE][0]['value']); // format of yyyy-mm-dd
            $date2 = date_create(date('Y-m-d')); // format of yyyy-mm-dd
            $dateDiff = date_diff($date1, $date2);
            $date_diff = $dateDiff->format("%a");
            //If date diff is greater than 180 days means 6 months  pls change the status value to open.
            if($date_diff > 180){
           
              $node->field_cus_status[LANGUAGE_NONE][0]['value'] = 1;
              $node = node_submit($node);
              node_save($node);
            }

          
          }
      }
           
   }
}
if($form_id == 'customer_node_form'){
  $form['#validate'][] = 'en3_lms_customer_node_form_validate';
}
return $form;
}

/**
 * Cutomer node form validate for BRN number.
 */
function en3_lms_customer_node_form_validate($form, &$form_state){
  $brn_value = db_query("select entity_id from {field_data_field_brn} where field_brn_value = :value and entity_id <> :id",array(':value' => $form_state['values']['field_brn'][LANGUAGE_NONE][0]['value'], ':id' => $form_state['node']->nid))->fetchAll(); 

  foreach($brn_value as $value){

    $status = db_query("select field_cus_status_value from {field_data_field_cus_status} where entity_id = :id",array(':id' => $value->entity_id))->fetchField();
    if($status == 2){
      form_set_error('field_brn','The entered Business Registered No is already closed. Please contact Site Administrator');
      return;
    }
  }
}
/*
 * Implemets hoo_views_pre_render().
 *
 */

function en3_lms_views_pre_render(&$view){
  global $user;
  
  if($view->name == 'og_members'){
   
    if(in_array('Account Manager',$user->roles)){  
    foreach ($view -> result as $key => &$result) {
  
  
        unset($view->result[$key]);
  
}
}
}

}

/**
 * Implements hook_node_view($node,$view_mode,$language).
 */
function en3_lms_node_view($node,$view_mode,$langcode){
  switch($node->type){
  case 'customer':
    //Get the Current Path alias and explode it to get the Licensee path.
    $alias = drupal_get_path_alias('node/'.arg(1));
    $alias = explode("/",$alias);
    //Using explode we have got the Licensee alias, using that get the source(nid) from url_alias.
    $node_alias = db_query("select source from url_alias where alias = :alias",array(':alias' => $alias[0]))->fetchField();
    $node_id = explode("/",$node_alias);
    // After explode the $node_alias you can get the nid, based on that get the node title which can be used in breadcrumb.
    $title  = db_query("select title from node where nid = :nid",array(':nid' => $node_id[1]))->fetchField();
    $breadcrumb = array();
    $breadcrumb[] = l('Home', '<front>');
    $breadcrumb[] = l('CRM', 'spaces');
      $breadcrumb[] = l($title,$alias[0]);


    drupal_set_breadcrumb($breadcrumb);
  break;
}
}

